{
	"info": {
		"_postman_id": "4b491c51-0a39-4368-967a-b35de55986a9",
		"name": "LIIS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20317259"
	},
	"item": [
		{
			"name": "LIIS Test v.1(env v1)",
			"item": [
				{
					"name": "Sign in",
					"item": [
						{
							"name": "sign-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"username\", jsonData.username);\r",
											"pm.environment.set(\"email\", jsonData.email);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Test JSON data type of the response\", () => {\r",
											"     pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties has correct type\", () => {\r",
											"    pm.expect(jsonData.username).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.password).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.email).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"pm.test(\"Username and email correct\", () => {\r",
											"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"username\"));\r",
											"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{{{rnd_username}}}}\",\n    \"email\": \"{{{{rnd_email}}}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/{{tester_email}}/sign-in",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"{{tester_email}}",
										"sign-in"
									]
								},
								"description": "Required fields: username, email, password"
							},
							"response": []
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Добавление нового поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Test JSON data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"     \r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"content\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение конкретного поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test JSON type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"     \r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"content\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение всех постов",
							"item": [
								{
									"name": "add_first_post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_second_post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id_second\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get posts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData[0]).to.have.property('title');\r",
													"    pm.expect(jsonData[0]).to.have.property('content');\r",
													"    pm.expect(jsonData[0]).to.have.property('author');\r",
													"    pm.expect(jsonData[0]).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"\r",
													"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"content\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Test posts count\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Изменение поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData).to.have.property('type');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"     \r",
													"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.type).to.be.a(\"string\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties valid\", () => {\r",
													"     \r",
													"    pm.expect(jsonData.message).to.eql(\"updated\");\r",
													"    pm.expect(jsonData.type).to.eql(\"success\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{new_title}}\",\n    \"content\": \"{{new_content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_updating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_content\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"PostID and AuthorID have not changed\", () => {\r",
													"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"post_id\"));\r",
													"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"author_id\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "posts_count_before",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"posts_count\", jsonData.lenght);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_deleting",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Test posts count after deleting\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(pm.environment.get(\"posts_count\"));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Добавленеи комментария к посту",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    pm.expect(jsonData).to.have.property('post');\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение конкретного комментария",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.post).to.be.a(\"number\");\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение всех комментариев поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_first_comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_second_comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].post).to.be.a(\"number\");\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Test comments count\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Изменение комментария",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.type).to.be.a(\"string\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties valid\", () => {\r",
													"    pm.expect(jsonData.message).to.eql(\"updated\");\r",
													"    pm.expect(jsonData.type).to.eql(\"success\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{new_comment_title}}\",\n    \"content\": \"{{new_comment_content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_updating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Title and content changed\", () => {\r",
													"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"new_comment_title\"));\r",
													"    pm.expect(jsonData.content).to.eql(pm.environment.get(\"new_comment_content\"));\r",
													"\r",
													"});\r",
													"pm.test(\"CommentID, AuthorID and PostID have not changed\", () => {\r",
													"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(jsonData.post).to.eql(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление комментария",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"content\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "comments_count_before",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comments_count\", jsonData.lenght);\r",
													"var postId = pm.environment.get(\"post_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete comment",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "yourpassword",
													"type": "string"
												},
												{
													"key": "username",
													"value": "yourusername",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/2",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_deleting",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Test deleting\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(pm.environment.get(\"comments_count\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "LIIS Test v.2(env v2)",
			"item": [
				{
					"name": "Sign in",
					"item": [
						{
							"name": "sign-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"username\", jsonData.username);\r",
											"pm.environment.set(\"first_name\", jsonData.first_name);\r",
											"pm.environment.set(\"last_name\", jsonData.last_name);\r",
											"pm.environment.set(\"email\", jsonData.email);\r",
											"pm.environment.set(\"user_id\", jsonData.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Test JSON data type of the response\", () => {\r",
											"     pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties has correct type\", () => {\r",
											"    pm.expect(jsonData.is_admin).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.last_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.middle_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.first_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.username).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.password).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.email).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties correct\", () => {\r",
											"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"username\"));\r",
											"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
											"    pm.expect(jsonData.first_name).to.eql(pm.environment.get(\"first_name\"));\r",
											"    pm.expect(jsonData.last_name).to.eql(pm.environment.get(\"last_name\"));\r",
											"    pm.expect(jsonData.middle_name).to.eql(\"\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{{{rnd_username}}}}\",\n    \"email\": \"{{{{rnd_email}}}}\",\n    \"password\": \"{{password}}\",\n    \"first_name\": \"{{{{rnd_first_name}}}}\",\n    \"middle_name\": \"{{middle_name}}\",\n    \"last_name\": \"{{{{rnd_last_name}}}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/{{tester_email}}/sign-in",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"{{tester_email}}",
										"sign-in"
									]
								},
								"description": "Required fields: username, email, password.\nOptional fields: first_name, middle_name, last_name."
							},
							"response": []
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Добавление нового поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Test JSON data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"content\"));\r",
													"});\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение конкретного поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test JSON type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"     \r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"content\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение всех постов",
							"item": [
								{
									"name": "add_first_post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_second_post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id_second\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get posts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData[0]).to.have.property('title');\r",
													"    pm.expect(jsonData[0]).to.have.property('content');\r",
													"    pm.expect(jsonData[0]).to.have.property('author');\r",
													"    pm.expect(jsonData[0]).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"title\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"content\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Test posts count\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение постов по страницам",
							"item": [
								{
									"name": "Добавление 25-ти постов",
									"item": [
										{
											"name": "Post post",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 3",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 4",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 5",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 6",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 7",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 8",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 9",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 10",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 11",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 12",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 13",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 14",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 15",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 16",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 17",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 18",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 19",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 20",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 21",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 22",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 23",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post post Copy 24",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Проверки страниц",
									"item": [
										{
											"name": "get_first_page",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Test data type of the response\", () => {\r",
															"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
															"});\r",
															"\r",
															"pm.test(\"The response has all properties\", () => {\r",
															"    pm.expect(jsonData[0]).to.have.property('title');\r",
															"    pm.expect(jsonData[0]).to.have.property('content');\r",
															"    pm.expect(jsonData[0]).to.have.property('author');\r",
															"    pm.expect(jsonData[0]).to.have.property('publication_datetime');\r",
															"    pm.expect(jsonData[0]).to.have.property('id');\r",
															"});\r",
															"\r",
															"pm.test(\"All properties has correct type\", () => {\r",
															"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
															"});\r",
															"\r",
															"pm.test(\"Data correct\", () => {\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"title\"));\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"content\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Test posts count\", () => {\r",
															"    pm.expect(jsonData.length)<=20;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts?page=1",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "get_second_page",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Test data type of the response\", () => {\r",
															"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
															"});\r",
															"\r",
															"pm.test(\"The response has all properties\", () => {\r",
															"    pm.expect(jsonData[0]).to.have.property('title');\r",
															"    pm.expect(jsonData[0]).to.have.property('content');\r",
															"    pm.expect(jsonData[0]).to.have.property('author');\r",
															"    pm.expect(jsonData[0]).to.have.property('publication_datetime');\r",
															"    pm.expect(jsonData[0]).to.have.property('id');\r",
															"});\r",
															"\r",
															"pm.test(\"All properties has correct type\", () => {\r",
															"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
															"});\r",
															"\r",
															"pm.test(\"Data correct\", () => {\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"title\"));\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length-1])).to.include(pm.environment.get(\"content\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Test posts count\", () => {\r",
															"    pm.expect(jsonData.length)<=20;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts?page=2",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													],
													"query": [
														{
															"key": "page",
															"value": "2"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Изменение поста(без прав администратора)",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData).to.have.property('type');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.type).to.be.a(\"string\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties valid\", () => {\r",
													"    pm.expect(jsonData.message).to.eql(\"updated\");\r",
													"    pm.expect(jsonData.type).to.eql(\"success\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{new_title}}\",\n    \"content\": \"{{new_content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_updating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_content\"));\r",
													"});\r",
													"pm.test(\"PostID and AuthorID have not changed\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"post_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"author_id\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление поста(без прав администратора)",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "posts_count_before",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"posts_count\", jsonData.lenght);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/post/{{post_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"post",
												"{{post_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_deleting",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Test posts count after deleting\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(pm.environment.get(\"posts_count\"));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Добавленеи комментария к посту",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    pm.expect(jsonData).to.have.property('post');\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение конкретного комментария",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData).to.have.property('title');\r",
													"    pm.expect(jsonData).to.have.property('content');\r",
													"    pm.expect(jsonData).to.have.property('author');\r",
													"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    pm.expect(jsonData).to.have.property('post');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
													"    pm.expect(jsonData.post).to.be.a(\"number\");\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение всех комментариев поста",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_first_comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "add_second_comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"The response has all properties\", () => {\r",
													"    pm.expect(jsonData[0]).to.have.property('title');\r",
													"    pm.expect(jsonData[0]).to.have.property('content');\r",
													"    pm.expect(jsonData[0]).to.have.property('author');\r",
													"    pm.expect(jsonData[0]).to.have.property('publication_datetime');\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
													"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
													"    pm.expect(jsonData[0].post).to.be.a(\"number\");\r",
													"});\r",
													"pm.test(\"Data correct\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_content\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Test comments count\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение комментариев по страницам",
							"item": [
								{
									"name": "Добавление поста",
									"item": [
										{
											"name": "Post post",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"post_id\", jsonData.id);\r",
															"pm.environment.set(\"author_id\", jsonData.author);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/posts",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"posts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Добавление 25-ти комментариев",
									"item": [
										{
											"name": "Post comment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 7",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 8",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 9",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 14",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 15",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 16",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 17",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 18",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 19",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 20",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 21",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 22",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 23",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Post comment Copy 24",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.environment.set(\"comment_id\", jsonData.id)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Проверки страниц",
									"item": [
										{
											"name": "get_first_page",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Test data type of the response\", () => {\r",
															"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
															"});\r",
															"pm.test(\"The response has all properties\", () => {\r",
															"    pm.expect(jsonData).to.have.property('title');\r",
															"    pm.expect(jsonData).to.have.property('content');\r",
															"    pm.expect(jsonData).to.have.property('author');\r",
															"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
															"    pm.expect(jsonData).to.have.property('id');\r",
															"    pm.expect(jsonData).to.have.property('post');\r",
															"});\r",
															"\r",
															"pm.test(\"All properties has correct type\", () => {\r",
															"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].post).to.be.a(\"number\");\r",
															"});\r",
															"pm.test(\"Data correct\", () => {\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_title\"));\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_content\"));\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Test comments count\", () => {\r",
															"    pm.expect(jsonData.length)<=20;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments?page=1",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "get_second_page",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Test data type of the response\", () => {\r",
															"     pm.expect(jsonData[0]).to.be.an(\"object\");\r",
															"});\r",
															"pm.test(\"The response has all properties\", () => {\r",
															"    pm.expect(jsonData).to.have.property('title');\r",
															"    pm.expect(jsonData).to.have.property('content');\r",
															"    pm.expect(jsonData).to.have.property('author');\r",
															"    pm.expect(jsonData).to.have.property('publication_datetime');\r",
															"    pm.expect(jsonData).to.have.property('id');\r",
															"    pm.expect(jsonData).to.have.property('post');\r",
															"});\r",
															"\r",
															"pm.test(\"All properties has correct type\", () => {\r",
															"    pm.expect(jsonData[0].title).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].content).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].author).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].publication_datetime).to.be.a(\"string\");\r",
															"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
															"    pm.expect(jsonData[0].post).to.be.a(\"number\");\r",
															"});\r",
															"pm.test(\"Data correct\", () => {\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_title\"));\r",
															"    pm.expect(JSON.stringify(jsonData[jsonData.length - 1])).to.include(pm.environment.get(\"comment_content\"));\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Test comments count\", () => {\r",
															"    pm.expect(jsonData.length)<=20;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{base_url}}/{{tester_email}}/comments?page=2",
													"protocol": "https",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"{{tester_email}}",
														"comments"
													],
													"query": [
														{
															"key": "page",
															"value": "2"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Изменение комментария(без прав администратора)",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test data type of the response\", () => {\r",
													"     pm.expect(jsonData).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties has correct type\", () => {\r",
													"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.type).to.be.a(\"string\");\r",
													"});\r",
													"\r",
													"pm.test(\"All properties valid\", () => {\r",
													"    pm.expect(jsonData.message).to.eql(\"updated\");\r",
													"    pm.expect(jsonData.type).to.eql(\"success\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{new_comment_title}}\",\n    \"text\": \"{{new_comment_content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_updating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Title and content changed\", () => {\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_comment_title\"));\r",
													"    pm.expect(JSON.stringify(jsonData)).to.include(pm.environment.get(\"new_comment_content\"));\r",
													"\r",
													"});\r",
													"pm.test(\"CommentID, AuthorID and PostID have not changed\", () => {\r",
													"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"comment_id\"));\r",
													"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"author_id\"));\r",
													"    pm.expect(jsonData.post).to.eql(pm.environment.get(\"post_id\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление комментария(без прав администратора)",
							"item": [
								{
									"name": "Post post",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"post_id\", jsonData.id);\r",
													"pm.environment.set(\"author_id\", jsonData.author);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{title}}\",\n    \"content\": \"{{content}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/posts",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post comment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comment_id\", jsonData.id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"{{comment_title}}\",\n    \"text\": \"{{comment_content}}\",\n    \"post\": {{post_id}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "comments_count_before",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"comments_count\", jsonData.lenght);\r",
													"var postId = pm.environment.get(\"post_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comments",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete comment",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "yourpassword",
													"type": "string"
												},
												{
													"key": "username",
													"value": "yourusername",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/2",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "check_deleting",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Test deleting\", () => {\r",
													"    pm.expect(jsonData.length).not.to.eql(pm.environment.get(\"comments_count\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{base_url}}/{{tester_email}}/comment/{{comment_id}}",
											"protocol": "https",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"{{tester_email}}",
												"comment",
												"{{comment_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Назначение пользователю роли admin",
					"item": [
						{
							"name": "sign-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"username\", jsonData.username);\r",
											"pm.environment.set(\"first_name\", jsonData.first_name);\r",
											"pm.environment.set(\"last_name\", jsonData.last_name);\r",
											"pm.environment.set(\"email\", jsonData.email);\r",
											"pm.environment.set(\"user_id\", jsonData.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Test JSON data type of the response\", () => {\r",
											"     pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties has correct type\", () => {\r",
											"    pm.expect(jsonData.is_admin).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.last_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.middle_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.first_name).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.username).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.password).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.email).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties correct\", () => {\r",
											"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"username\"));\r",
											"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
											"    pm.expect(jsonData.first_name).to.eql(pm.environment.get(\"first_name\"));\r",
											"    pm.expect(jsonData.last_name).to.eql(pm.environment.get(\"last_name\"));\r",
											"    pm.expect(jsonData.middle_name).to.eql(\"\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{{{rnd_username}}}}\",\n    \"email\": \"{{{{rnd_email}}}}\",\n    \"password\": \"{{password}}\",\n    \"first_name\": \"{{{{rnd_first_name}}}}\",\n    \"middle_name\": \"{{middle_name}}\",\n    \"last_name\": \"{{{{rnd_last_name}}}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/{{tester_email}}/sign-in",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"{{tester_email}}",
										"sign-in"
									]
								},
								"description": "Required fields: username, email, password.\nOptional fields: first_name, middle_name, last_name."
							},
							"response": []
						},
						{
							"name": "Grant user admin role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Test data type of the response\", () => {\r",
											"     pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties has correct type\", () => {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.type).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"pm.test(\"All properties valid\", () => {\r",
											"    pm.expect(jsonData.message).to.eql(\"updated\");\r",
											"    pm.expect(jsonData.type).to.eql(\"success\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{admin_username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{admin_password}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": {{user_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/{{tester_email}}/make_admin",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"{{tester_email}}",
										"make_admin"
									]
								},
								"description": "Grant user admin role so that he can put and delete foreign entities."
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}